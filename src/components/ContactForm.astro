---
import '../styles/global.css';

const emailAddress = "inigo.arriazu@dataoverkill.com";
const emailSubject = "colaboracion";
const emailBody = "hola me llamo ...";
const calendlyUrl = "https://calendly.com/inigo-arriazu-dataoverkill";

---

<form id="contactForm" class="contact-form">
    <!-- You have to implement a way to fill both the name and email fields at the same time -->
    <div class="form-group">
        <label for="name">Name</label>
        <input type="text" id="name" name="user_name" required>
    </div>
    
    <div class="form-group">
        <label for="email">Email</label>
        <input type="email" id="email" name="user_email" required>
    </div>
    
    <div class="form-group">
        <label for="message">Message</label>
        <textarea id="message" name="user_email" required></textarea>
    </div>
    
    <button type="submit" class="cta-button_all">Send message</button>

</form>
 




<div class="alternative-contact">
    <p>Or if you prefer:</p>
    <a href={calendlyUrl} target="_blank" class="cta-button">Reserve a time slot</a>
    <a 
        href={`mailto:${emailAddress}?subject=${encodeURIComponent(emailSubject)}&body=${encodeURIComponent(emailBody)}`} 
        class="cta-button"
        target="_blank"
    >
        Send us an email directly
    </a>
</div>

<script>
    import emailjs from 'emailjs-com';
  
      const form = document.getElementById('contactForm');
      if (form) {
          form.addEventListener('submit', async (event) => {
              event.preventDefault();
              try {
                
                    const formElement = event.currentTarget as HTMLFormElement;
                    const result = await emailjs.sendForm(
                        'service_ht0gved', //'YOUR_SERVICE_ID',
                        'template_paws7df', //'YOUR_TEMPLATE_ID',
                        formElement,
                        '-zrizmX6J4PtEyCpG', //'YOUR_USER_ID'
                    );
                
                    console.log(result.text);
                    alert('Message sent successfully!');

                    // Reset the form fields after sending the message
                    formElement.reset();

              } catch (error) {
                  
                  if (error instanceof Error) {
                  
                      console.error(error.message);
                  
                  } else {
                      
                      console.error('An unknown error occurred.');
                  }
                      
                  alert('Failed to send message.');
              }
          })
      };
  </script>

<style>
    .contact-form {
        max-width: 500px;
        margin: 0 auto 2rem;
        text-align: left;
    }
    .form-group {
        margin-bottom: 1.5rem;
    }
    .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        /* color: rgb(var(--accent-light)); */
    }
    .form-group input,
    .form-group textarea {
        width: 100%;
        padding: 0.8rem;
        border-radius: 8px;
        border: 3px solid rgba(var(--accent-light), 25%);
        /* background: rgba(var(--accent-dark), 33%); */
        color: black;
        font-size: 1rem;
    }
    .form-group textarea {
        height: 150px;
        resize: vertical;
    }

    .alternative-contact {
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 1px solid rgba(var(--accent-light), 25%);
    }



 
</style>
